:root {
  --color-accent: #8EACCD;
}

html {
  color-scheme: light dark;
}

body {
  font: 100%/1.5 system-ui;
  max-width: 100ch;
  margin: 0 auto;
  margin-inline: max(1em, (100% - 100ch) / 2);
}

ul, li {
  display: contents;
}

nav {
  --border-color: oklch(50% 10% 200 / 40%);
  display: flex;
  margin-bottom: 0.2em;
  border-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: var(--border-color);
}

nav a {
  flex: 1;
  text-decoration: none;
  color: inherit;
  text-align: center;
  padding: 0.5em;
}

nav a:hover {
  padding-bottom: 0.1em;
  background-color: color-mix(in oklch, var(--color-accent), canvas 85%);
  border-bottom: 0.4rem solid var(--color-accent);
}

.current {
  border-bottom: 0.4em solid oklch(80% 3% 200);
  padding-bottom: 0.1em;
}

form {
  display: grid;
  grid-template-columns: auto 1fr;
}

input {
  font: inherit;
}

textarea {
  font: inherit;
}

label {
  display: grid;
  grid-template-columns: subgrid;
  font: inherit;
  grid-column: 1 / -1;
  gap: 1em;
  margin-bottom: 1em;
}

button {
  font: inherit;
  grid-column: 1 / -1;
  gap: 1em;
}

.projects{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(15em, 1fr));
  gap: 1em;
}

.projects article {
  display: grid;
  grid-template-rows: subgrid;
  grid-row: span 3;
  gap: 1em;
}

h2 {
  margin: 0;
}

h1 {
  font-size: 400%;
}

h1, h2, h3, h4, h5, h6 {
  line-height: 1.1;
  text-wrap: balance;
}

header {
  text-align: center;
  margin-bottom: 1.5em;
}

header h1 {
  font-size: 2.5rem;
  margin-bottom: 0.5em;
}

header p {
  font-size: 1rem;
}

header a {
  text-decoration: none;
}

header a:hover {
  text-decoration: underline;
}

main {
  margin: 0 auto;
  max-width: 800px;
}

section {
  margin-bottom: 2em;
  padding-bottom: 1em;
  border-bottom: 1px solid #ccc;
}

section h2 {
  font-size: 1.8rem;
  margin-bottom: 0.5em;
}

article h3 {
  font-size: 1.2rem;
  margin-bottom: 0.3em;
}

article p {
  font-size: 1rem;
  margin: 0.5em 0;
}

article ul {
  margin: 0.5em 0 0 1.5em;
  list-style-type: disc;
}

article ul li {
  margin-bottom: 0.5em;
}

section ul {
  list-style-type: none;
  padding: 0;
}

section ul li {
  margin-bottom: 0.5em;
}

label.color-scheme {
  display: inline-flex;
  align-items: center;
  gap: 0.5em;
  position: absolute;
  top: 1em;
  right: 1em;
}

dl {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  text-align: center;
}

dt {
  grid-row: 1;
  font-size: 0.85rem; /* smaller titles */      /* optional: lighter text color */
}

dd {
  grid-row: 2;
  font-size: 1.5rem;  /* bigger numbers */
  font-weight: bold;  /* optional: makes numbers stand out more */
  margin: 0;
}

#projects-plot {
  max-width: 20em;
  margin-block: 2em;
  overflow: visible;
}

/* Legend Styling */
.legend {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(9em, 1fr)); /* Responsive grid layout */
  gap: 1em; /* Space between legend items */
  border: 1px solid #ccc; /* Light border around the legend */
  padding: 1em; /* Space inside the legend */
  margin: 1em 0; /* Space around the legend */
  border-radius: 0.5em; /* Rounded corners */
}

.legend li {
  display: flex;
  align-items: center; /* Align swatch and text vertically */
  gap: 0.5em; /* Space between swatch and text */
  font-size: 0.9rem; /* Slightly smaller text */
}

.legend .swatch {
  display: inline-block;
  width: 1em; /* Width of the swatch */
  height: 1em; /* Height of the swatch */
  background-color: var(--color); /* Use the color variable */
  border-radius: 0.25em; /* Slight rounding for the swatch */
  border: 1px solid #ccc; /* Optional border for better visibility */
}

/* Container for Pie Chart and Legend */
.container {
  display: flex; /* Flex layout for side-by-side alignment */
  align-items: center; /* Vertically align items */
  gap: 2em; /* Space between the pie chart and legend */
  margin: 2em 0; /* Space around the container */
}

.container svg {
  flex-shrink: 0; /* Prevent the pie chart from shrinking */
  max-width: 50%; /* Limit the width of the pie chart */
}

.container .legend {
  flex: 1; /* Allow the legend to take up remaining space */
}

&:has(path:hover) {
  path:not(:hover) {
    opacity: 0.5;
  }
}

path {
  transition: 300ms;
}

.selected {
  --color: oklch(60% 45% 0) !important;

  &:is(path) {
    fill: var(--color);
  }
}

path {
  cursor: pointer;
}

dl.info {
  display: grid;
  grid-template-columns: auto 1fr; /* Labels in the first column, values in the second */
  gap: 0.5em; /* Space between rows and columns */
  margin: 0; /* Remove default margins */
  transition-duration: 500ms;
  transition-property: opacity, visibility;
}

dl.info dt {
  font-size: 0.85rem; /* Smaller font size for labels */
  font-weight: normal; /* Lighter font weight for labels */
  text-align: left; /* Align labels to the left */
}

dl.info dd {
  font-size: 1.2rem; /* Larger font size for values */
  font-weight: bold; /* Make values stand out */
  margin: 0; /* Remove default margins */
  text-align: left; /* Align values to the left */
}

/* Style for .tooltip */
.tooltip {
  position: fixed; /* Fixed position to stay in view */
  top: 1em; /* Place at the top of the viewport */
  left: 1em; /* Place at the left of the viewport */
  border-radius: 0.5em; /* Rounded corners */
  padding: 1em; /* Add padding inside the tooltip */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
  z-index: 1000; /* Ensure it stays above other elements */
}

circle {
  fill:darkseagreen;
  transition: 200ms;
  transform-origin: center;
  transform-box: fill-box;
  @starting-style {
  r: 0;
}
}

circle:hover {
  transform: scale(1.5);
}

dl.info[hidden]:not(:hover, :focus-within) {
  opacity: 0;
  visibility: hidden;
}

@keyframes marching-ants {
  to {
    stroke-dashoffset: -8; /* 5 + 3 */
  }
}

.selection {
  fill-opacity: 0.1;
  stroke: black;
  stroke-opacity: 0.7;
  stroke-dasharray: 5 3;
  animation: marching-ants 2s linear infinite;
}

circle.selected {
  fill: #ff6b6b;
}

#files {
  display: grid;
  grid-template-columns: 1fr; /* Files will stack vertically */
  gap: 1em; /* Space between file entries */
}

.file-entry {
  display: grid; /* Use grid within each file entry */
  grid-template-columns: minmax(250px, auto) 1fr; /* Fixed minimum width for file info, rest for dots */
  grid-template-rows: auto auto; /* Two rows: one for header, one for line count */
  grid-template-areas:
    "header dots"
    "count  dots";
  gap: 0.5em 1em; /* Vertical gap between rows, Horizontal gap between columns */
  align-items: start; /* Align items to the top */
}

.file-header {
  grid-area: header;
  display: flex; /* Use flexbox within header for file name and dots */
  align-items: center; /* Align file name and dots vertically */
  gap: 1em; /* Space between file name and dots */
}

.file-name {
  /* No grid-area needed if within .file-header */
  font-weight: bold;
  /* Removed flex-shrink: 0; */
}

.line-count {
  grid-area: count;
  font-size: 0.9em;
  color: #666;
  text-align: left; /* Align the line count to the left */
  margin-left: 1em; /* Indent line count */
}

.loc-dots {
  grid-area: dots;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  align-content: start; /* Align dots to the top */
  gap: 0.15em;
  margin-top: 0; /* Ensure no extra top margin */
  /* flex: 1; Removed flex: 1 as grid handles the width */
}

.loc {
  width: 8px;
  height: 8px;
  /* Removed background-color to allow inline style from D3 to take effect */
  border-radius: 50%;
  margin: 1px; /* Space between dots */
}

/* Ensure no conflicting styles from previous attempts */
#files > div,
#files dt,
#files dd,
.file-header span /* Target the span inside file-header if needed */ {
  /* Remove previous grid/flexbox settings that conflict */
  display: unset !important; /* Use !important to override potential inline styles */
  grid-column: unset !important;
  grid-row: unset !important;
  margin: unset !important;
  padding: unset !important;
}

.file-name {
   display: unset !important; /* Ensure file-name doesn't have unexpected display */
   font-weight: bold !important;
}

#files dd.line-count { /* Target the line-count specifically if needed */
  text-align: left !important;
  margin-left: 1em !important;
}

#scrolly-1 {
  position: relative;
  display: flex;
  gap: 1rem;
  /* Adjust height if needed for scrolling behavior in flex container */
  /* height: 100vh; Remove if causing issues */
}

#scatter-story {
  position: relative;
  flex: 1; /* Allow story to take up space */
  overflow-y: auto; /* Make the story section scrollable */
  /* Add padding-right to avoid scrollbar overlapping content */
  padding-right: 1rem; 
}

#scatter-plot {
  position: sticky;
  top: 0; /* Stick to the top of the viewport */
  left: initial; /* Ensure left is not forcing position */
  bottom: auto;
  height: 100vh; /* Make it fill the viewport height to ensure sticky works and visualizations are visible */
  flex: 1; /* Allow plot to take up space */
  display: flex; /* Use flexbox for internal layout if needed */
  flex-direction: column; /* Stack internal elements */
  align-items: center; /* Center content horizontally */
  justify-content: flex-start; /* Align content to the top */
}

/* Adjustments for elements inside scatter-plot if needed */
#scatter-plot #chart, 
#scatter-plot #files {
  /* Ensure these elements take up appropriate space or have necessary margins */
  margin-top: 1em; /* Add some space below the sticky top */
}

/* Ensure scatter plot specific elements don't interfere with sticky positioning */
#scatter-plot > h2, #scatter-plot > dl, #scatter-plot > p {
  /* Adjust margins or positioning if they are causing issues */
}